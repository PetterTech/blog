<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>regex on PetterTech</title>
    <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/tags/regex/</link>
    <description>Recent content in regex on PetterTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 May 2016 10:40:20 +0000</lastBuildDate><atom:link href="https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Powershell: Creating strong passwords</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2016/05/26/powershell-creating-strong-passwords/</link>
      <pubDate>Thu, 26 May 2016 10:40:20 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2016/05/26/powershell-creating-strong-passwords/</guid>
      <description>A tweet from @JanEgilRing caught my eye this morning, it was showing how you can use powershell to create passwords. The link in the tweet pointed here: http://powershell.com/cs/blogs/tips/archive/2016/05/23/one-liner-random-password-generator.aspx
Seeing that line and realizing how simple it was, it got me thinking on how I could implement this in my scripts.
The only issue I saw with that one-liner was that the passwords it creates do not necessarily comply with high complexity rules.</description>
    </item>
    
  </channel>
</rss>
