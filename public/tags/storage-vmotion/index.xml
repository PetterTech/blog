<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>storage vmotion on PetterTech</title>
    <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/tags/storage-vmotion/</link>
    <description>Recent content in storage vmotion on PetterTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Sep 2014 10:54:40 +0000</lastBuildDate><atom:link href="https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/tags/storage-vmotion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerCLI: Evacuating a datastore</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2014/09/11/powercli-evacuating-a-datastore/</link>
      <pubDate>Thu, 11 Sep 2014 10:54:40 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2014/09/11/powercli-evacuating-a-datastore/</guid>
      <description>In case you ever need to empty out a datastore in you vmware environment, there is a nice little one-liner in PowerCLI for that:
Get-VM -Datastore &amp;#34;datastore1&amp;#34; | Move-VM -Datastore (Get-VMHost -Location &amp;#39;cluster1&amp;#39; | Select-Object -First 1 | Get-Datastore | Where-Object {($_.Name -ne &amp;#39;datastore1&amp;#39;) -and ($_.FreeSpaceGB -gt &amp;#39;500&amp;#39;)} | Sort-Object FreeSpaceGB -Descending | Select-Object -First 1) Where “datastore1” is the datastore you want to empty out and “cluster1” is the cluster where the datastore is available.</description>
    </item>
    
  </channel>
</rss>
