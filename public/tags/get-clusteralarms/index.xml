<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>get-clusteralarms on PetterTech</title>
    <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/tags/get-clusteralarms/</link>
    <description>Recent content in get-clusteralarms on PetterTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Aug 2014 08:21:59 +0000</lastBuildDate><atom:link href="https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/tags/get-clusteralarms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerCLI: Getting cluster alarms</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2014/08/30/powercli-get-cluster-alarms/</link>
      <pubDate>Sat, 30 Aug 2014 08:21:59 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2014/08/30/powercli-get-cluster-alarms/</guid>
      <description>The next step in my short series on getting vCenter alarms using PowerCLI is to get cluster alarms.
Hereâ€™s the code:
$Clusters = Get-View -ViewType ComputeResource -Property Name,OverallStatus,TriggeredAlarmstate $FaultyClusters = $Clusters | Where-Object {$_.TriggeredAlarmState -ne &amp;#34;{}&amp;#34;} $report = @() $progress = 1 if ($FaultyClusters -ne $NULL) { foreach ($FaultyCluster in $FaultyClusters) { foreach ($TriggeredAlarm in $FaultyCluster.TriggeredAlarmstate) { Write-Progress -Activity &amp;#34;Gathering alarms&amp;#34; -Status &amp;#34;Working on $($FaultyCluster.Name)&amp;#34; -PercentComplete ($progress/$FaultyClusters.count*100) -Id 1 -ErrorAction SilentlyContinue $entity = $TriggeredAlarm.</description>
    </item>
    
  </channel>
</rss>
