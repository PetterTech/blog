<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Exchange on PetterTech</title>
    <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/categories/exchange/</link>
    <description>Recent content in Exchange on PetterTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Jan 2013 09:17:13 +0000</lastBuildDate><atom:link href="https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/categories/exchange/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exchange: Content index state failed</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2013/01/16/exchange-content-index-state-failed/</link>
      <pubDate>Wed, 16 Jan 2013 09:17:13 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2013/01/16/exchange-content-index-state-failed/</guid>
      <description>If you ever had problems with corrupt databases in an Exchange 2010 DAG setup you might have encountered this error. Trying to activate the database on a server where it has this state will fail.
However there is a quite simple fix given that you have a healthy copy of the database on a different server:
Update-MailboxDatabaseCopy -Identity DB -SourceServer -CatalogOnly
Run the command in the Exchange Management Shell and it should fix the Content index state and allow you to activate the database again.</description>
    </item>
    
    <item>
      <title>Exchange: Activate Database Copy fails</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2013/01/16/activate-database-copy-fails/</link>
      <pubDate>Wed, 16 Jan 2013 09:07:50 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2013/01/16/activate-database-copy-fails/</guid>
      <description>After some exchange services failed on one of the nodes in our Exchange 2010 DAG we got some problems with one database. The database was mounted on server2 where it has an activation preference of 2.
Trying to manually activate the database on server1, where is has an activation preference of 1, resulted in the following error:
——————————————————–
Microsoft Exchange Error
——————————————————–
Cannot activate database copy ‘Activate Database Copy…’.
Activate Database Copy…</description>
    </item>
    
    <item>
      <title>Function for locating an email address</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2012/08/28/function-for-locating-an-email-address/</link>
      <pubDate>Tue, 28 Aug 2012 10:41:15 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2012/08/28/function-for-locating-an-email-address/</guid>
      <description>Yesterday I was given a relatively easy task: find out who or what has a given email address.
As this was within our own Exchange organization it proved to be quite simple:
You can achieve the goal with a simple one-liner:
get-recipient -ResultSize unlimited | where {$_.emailaddresses -match &amp;#34;email@address.com&amp;#34;} But wouldn’t it be easier to have it in a function? In Powershell, creating functions isn’t all that hard. Basically all you need to do is wrap the command or script block with a function statement, see here:</description>
    </item>
    
    <item>
      <title>Check if DAG databases is on preferred server</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2012/04/30/check-if-dag-databases-is-on-preferred-server/</link>
      <pubDate>Mon, 30 Apr 2012 10:35:57 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2012/04/30/check-if-dag-databases-is-on-preferred-server/</guid>
      <description>If you are using DAG in exchange 2010 for high availability on your mailboxes there may be one thing you might have noticed, the databases can fail over to a less preferred server at any time without you noticing.
Microsoft have provided you with a script for balancing these databases, RedistributeActiveDatabases.ps1. With this script you can activate the databases on their preferred server again. But how do you know when they have failed over?</description>
    </item>
    
    <item>
      <title>Mass import of users in Active Directory v2 – Powershell time</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/10/27/mass-import-of-users-in-active-directory-v2-powershell-time/</link>
      <pubDate>Thu, 27 Oct 2011 19:54:21 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/10/27/mass-import-of-users-in-active-directory-v2-powershell-time/</guid>
      <description>Earlier I posted a script that created users and homefolders and added the users to specified groups. It also set ntfs permissions on the homefolders.
That script used primarily old fashioned stuff, so I sat down and started looking for a neat way to do the same in powershell.
The powershell script I came up does a lot more than the last one. Here a little list:
Creates OUs Creates users Creates security groups Creates distribution groups Creates mailboxes for all users Add specified users to the correct security and distribution groups Creates a homefolder root folder and shares it Creates a homefolder for each user and sets ntfs permissions Set storage limit on the exchange mailbox database As you can see, it does quite a lot.</description>
    </item>
    
    <item>
      <title>Install and configure Exchange 2010 using Powershell</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/09/29/install-and-configure-exchange-2010-using-powershell/</link>
      <pubDate>Thu, 29 Sep 2011 06:51:38 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/09/29/install-and-configure-exchange-2010-using-powershell/</guid>
      <description>In this guide I will show you how to install and configure a simple Exchange 2010 environment using no gui at all.
Installing exchange 2010 without gui may seem kinda nerdy, but it’s quite useful for quickly setting up a test environment for example.
Remember to run Windows update prior to the installation.
Start powershell as administrator and type:
import-module servermanager First we need to install all of the prerequisites:</description>
    </item>
    
    <item>
      <title>Enable Resource Booking Attendant on all Room Mailboxes</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/09/12/enable-resource-booking-attendant-on-all-room-mailboxes/</link>
      <pubDate>Mon, 12 Sep 2011 12:28:56 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/09/12/enable-resource-booking-attendant-on-all-room-mailboxes/</guid>
      <description>The Resource Booking Attendant should be enabled on all your Room Mailboxes. If it is not, the room will not accept or decline incoming meeting requests. Which is somewhat the whole point right?
Heres a powershell command to enable it on all the Room Mailboxes in an exchange organization:
Get-Mailbox -RecipientTypeDetails roommailbox | Set-CalendarProcessing -AutomateProcessing AutoAccept </description>
    </item>
    
    <item>
      <title>Editing permissions on all mailboxes in one command, Exchange 2010/2007</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/08/18/editing-permissions-on-all-mailboxes-in-one-command-exchange-20102007/</link>
      <pubDate>Thu, 18 Aug 2011 07:44:23 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/08/18/editing-permissions-on-all-mailboxes-in-one-command-exchange-20102007/</guid>
      <description>If you have some sort of 3rd-party application that needs access to all of your mailboxes, it can be a pain to set the permissions on all of your mailboxes.
Except if you use this nice little powershell command:
Get-Mailbox -ResultSize unlimited | Add-MailboxPermission -User admin -AccessRights FullAccess -InheritanceType all What this command will do is to add Full mailbox access to every mailbox in your Exchange organization for the user admin.</description>
    </item>
    
    <item>
      <title>Receive connector allowing anonymous relay on exchange 2010/2007</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/08/17/receive-connector-allowing-anonymous-relay-on-exchange-20102007/</link>
      <pubDate>Wed, 17 Aug 2011 14:27:32 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/08/17/receive-connector-allowing-anonymous-relay-on-exchange-20102007/</guid>
      <description>Often it’s a good idea to have a receive connector allowing certain devices to send mail through you exchange server without having to authenticate.
One example from where I currently work is printers.
We never set up the printers ourselves, that job is done by the provider. And do we want to give them a username and password allowing for mail relay through our servers? No, we don’t.
It’s a better practice to have them only input the name/ip-address of one exchange server with the cas role.</description>
    </item>
    
    <item>
      <title>Activesync issue on Exchange 2010</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/08/04/activesync-issue-on-exchange-2010/</link>
      <pubDate>Thu, 04 Aug 2011 09:56:46 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/08/04/activesync-issue-on-exchange-2010/</guid>
      <description>At work we are currently migrating to a new active directory domain. The migration hos gone rather smoothly except for a couple of users who are not able to sync mail on their phones.
After a little research I found the following events in the event log on our exchange CAS server:
Log Name: Application
Source: MSExchange ActiveSync
Date: 04.08.2011 11:00:48
Event ID: 1053
Task Category: Configuration
Level: Error
Keywords: Classic</description>
    </item>
    
    <item>
      <title>Set event logging for the offline address list generator to medium</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/08/03/set-event-logging-for-the-offline-address-list-generator-to-medium/</link>
      <pubDate>Wed, 03 Aug 2011 06:48:06 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/08/03/set-event-logging-for-the-offline-address-list-generator-to-medium/</guid>
      <description>In a default exchange 2007/2010 installation the logging level for OALGen is set to lowest. That means that if you have users who do not show up in the Global address list (GAL) or they are missing some info, you will only see the following events in the event log:
Log Name: Application
Source: MSExchangeSA
Date: 03.08.2011 08:15:18
Event ID: 9320 Task Category: (13)
Level: Warning
Keywords: Classic
User: N/A</description>
    </item>
    
    <item>
      <title>smtpDiag – Diagnose smtp and dns problems</title>
      <link>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/06/24/smtpdiag-diagnose-smtp-and-dns-problems/</link>
      <pubDate>Fri, 24 Jun 2011 09:27:35 +0000</pubDate>
      
      <guid>https://blue-cliff-0fe9f2b03.3.azurestaticapps.net/index.php/2011/06/24/smtpdiag-diagnose-smtp-and-dns-problems/</guid>
      <description>SmtpDiag is a nifty little tool for diagnosing any smtp or dns issues on your mailserver.
Usage: smtpdiag SmtpDiag</description>
    </item>
    
  </channel>
</rss>
